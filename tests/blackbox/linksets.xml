<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright 2009 Yusuf Simonson
  This file is part of Snowball.
  
  Snowball is free software: you can redistribute it and/or modify it under the
  terms of the GNU Affero General Public License as published by the Free
  Software Foundation, either version 3 of the License, or (at your option) any
  later version.

  Snowball is distributed in the hope that it will be useful, but WITHOUT ANY
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
  A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
  details.

  You should have received a copy of the GNU Affero General Public License
  along with Snowball.  If not, see <http://www.gnu.org/licenses/>.
-->

<test>
   <!-- First insert sample nodes -->
   <testcase name="PUT a sample node">
      <request method="PUT" url="http://localhost:8080/nodes/a?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>200</status>
   </testcase>
   
   <testcase name="PUT a sample node">
      <request method="PUT" url="http://localhost:8080/nodes/b?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>200</status>
   </testcase>
   
   <testcase name="PUT a sample node">
      <request method="PUT" url="http://localhost:8080/nodes/x?error_format=verbose_txt">
         <auth username="blackbox2" password="sandbox"/>
      </request>
      <status>200</status>
   </testcase>
   
   <!-- Insert sample links -->
   <testcase name="sample link #1">
      <request method="PUT" url="http://localhost:8080/links/a/b">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="weight">1.0</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>200</status>
   </testcase>
   
   <testcase name="sample link #2">
      <request method="PUT" url="http://localhost:8080/links/b/a">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="weight">1.0</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>200</status>
   </testcase>
   
   <testcase name="sample link #3">
      <request method="PUT" url="http://localhost:8080/links/a/x">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="weight">0.5</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>200</status>
   </testcase>
   
   <testcase name="sample link #4">
      <request method="PUT" url="http://localhost:8080/links/b/x">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="weight">0.5</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>200</status>
   </testcase>
   
   <testcase name="sample link #5">
      <request method="PUT" url="http://localhost:8080/links/x/a">
         <auth username="blackbox2" password="sandbox"/>
         <body type="post">
            <param name="weight">0.7</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>200</status>
   </testcase>
   
   <testcase name="sample link #6">
      <request method="PUT" url="http://localhost:8080/links/x/b">
         <auth username="blackbox2" password="sandbox"/>
         <body type="post">
            <param name="weight">0.7</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>200</status>
   </testcase>
   
   <!-- GET linksets -->
   <testcase name="GET linkset with non-existent from node">
      <request method="GET" url="http://localhost:8080/links/doesntexist">
         <body type="post">
            <param name="direction">from</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>404</status>
   </testcase>
   
   <testcase name="GET linkset without direction">
      <request method="GET" url="http://localhost:8080/links/a?error_format=verbose_txt"/>
      <status>400</status>
   </testcase>
   
   <testcase name="GET linkset with illegal direction">
      <request method="GET" url="http://localhost:8080/links/a">
         <body type="post">
            <param name="direction">foo</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>400</status>
   </testcase>
   
   <testcase name="GET linkset from">
      <request method="GET" url="http://localhost:8080/links/a">
         <body type="post">
            <param name="direction">from</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>200</status>
      <contents type="python">
         import simplejson
         json = simplejson.loads(contents)
         
         assert 'b' in json
         b = json['b']
         assert b['weight'] == 1.0
         assert b['update_date']
         assert len(b['tags']) == 0
         
         assert 'x' in json
         x = json['x']
         assert x['weight'] == 0.5
         assert x['update_date']
         assert len(x['tags']) == 0
      </contents>
   </testcase>
   
   <testcase name="GET linkset to">
      <request method="GET" url="http://localhost:8080/links/x">
         <body type="post">
            <param name="direction">to</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>200</status>
      <contents type="python">
         import simplejson
         json = simplejson.loads(contents)
         
         assert 'a' in json
         a = json['a']
         assert a['weight'] == 0.5
         assert a['update_date']
         assert len(a['tags']) == 0
         
         assert 'b' in json
         b = json['b']
         assert b['weight'] == 0.5
         assert b['update_date']
         assert len(b['tags']) == 0
      </contents>
   </testcase>
   
   <!-- illegal DELETE linksets -->
   <testcase name="DELETE linkset without direction">
      <request method="DELETE" url="http://localhost:8080/links/a?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>400</status>
   </testcase>
   
   <testcase name="DELETE linkset with illegal direction">
      <request method="DELETE" url="http://localhost:8080/links/a">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="direction">foo</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>400</status>
   </testcase>
   
   <testcase name="illegal DELETE from linkset">
      <request method="DELETE" url="http://localhost:8080/links/x">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="direction">from</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>403</status>
   </testcase>
   
   <testcase name="DELETE linkset on non-existent node">
      <request method="DELETE" url="http://localhost:8080/links/doesntexist">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="direction">from</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>404</status>
   </testcase>
   
   <!-- legal DELETE linksets -->
   <testcase name="DELETE to linkset (step 1)">
      <request method="DELETE" url="http://localhost:8080/links/a">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="direction">to</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>200</status>
   </testcase>
   
   <testcase name="DELETE to linkset (step 2)">
      <request method="GET" url="http://localhost:8080/links/b/a?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>404</status>
   </testcase>
   
   <testcase name="DELETE to linkset (step 3)">
      <request method="GET" url="http://localhost:8080/links/x/a?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>404</status>
   </testcase>
   
   <testcase name="DELETE from linkset (step 1)">
      <request method="DELETE" url="http://localhost:8080/links/b">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="direction">from</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>200</status>
   </testcase>
   
   <testcase name="DELETE from linkset (step 2)">
      <request method="GET" url="http://localhost:8080/links/b">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="direction">from</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>200</status>
      <contents type="python">
         import simplejson
         json = simplejson.loads(contents)
         
         assert len(json) == 0
      </contents>
   </testcase>
   
   <!-- Cleanup -->
   <testcase name="Cleanup #1">
      <request method="DELETE" url="http://localhost:8080/nodes/a?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>200</status>
   </testcase>
   
   <testcase name="Cleanup #2">
      <request method="DELETE" url="http://localhost:8080/nodes/b?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>200</status>
   </testcase>
   
   <testcase name="Cleanup #3">
      <request method="DELETE" url="http://localhost:8080/nodes/x?error_format=verbose_txt">
         <auth username="blackbox2" password="sandbox"/>
      </request>
      <status>200</status>
   </testcase>
</test>
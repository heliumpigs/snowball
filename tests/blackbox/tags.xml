<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright 2009 Yusuf Simonson
  This file is part of Snowball.
  
  Snowball is free software: you can redistribute it and/or modify it under the
  terms of the GNU Affero General Public License as published by the Free
  Software Foundation, either version 3 of the License, or (at your option) any
  later version.

  Snowball is distributed in the hope that it will be useful, but WITHOUT ANY
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
  A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
  details.

  You should have received a copy of the GNU Affero General Public License
  along with Snowball.  If not, see <http://www.gnu.org/licenses/>.
-->

<test>
   <!-- Setting up some nodes to work with -->
   <testcase name="PUT a node without tags">
      <request method="PUT" url="http://localhost:8080/nodes/blackbox1?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>200</status>
      <contents type="python">
         import simplejson
         json = simplejson.loads(contents)
         
         assert len(json['tags']) == 0
      </contents>
   </testcase>
   
   <!-- Testing PUT -->
   <testcase name="PUT a sample tag, node DNE">
      <request method="PUT" url="http://localhost:8080/tags/nothere">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="tags">tag1 tag2</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>404</status>
   </testcase>
   
   <testcase name="PUT a sample node, no tags">
      <request method="PUT" url="http://localhost:8080/tags/blackbox1?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>400</status>
   </testcase>
   
   <testcase name="PUT an update to a node, valid">
      <request method="PUT" url="http://localhost:8080/tags/blackbox1">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="tags">tag1 tag2</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>200</status>
      <contents type="python">
         import simplejson
         json = simplejson.loads(contents)
         
         assert len(json['tags']) == 2
         assert 'tag1' in json['tags']
         assert 'tag2' in json['tags']
      </contents>
   </testcase>
   
   <testcase name="PUT another update to a node, valid">
      <request method="PUT" url="http://localhost:8080/tags/blackbox1">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="tags">tag3</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>200</status>
      <contents type="python">
         import simplejson
         json = simplejson.loads(contents)
         
         assert json['owner'] == 'blackbox1'
         assert json['type'] == 'node'
         assert json['id']
         assert len(json['tags']) == 3
         assert 'tag1' in json['tags']
         assert 'tag2' in json['tags']
         assert 'tag3' in json['tags']
      </contents>
   </testcase>
   
   <testcase name="PUT an update to a node, not user's node">
      <request method="PUT" url="http://localhost:8080/tags/blackbox1">
         <auth username="blackbox2" password="sandbox"/>
         <body type="post">
            <param name="tags">tag4</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>403</status>
   </testcase>
   
   <!-- Testing GET -->
   <testcase name="GET tags, node DNE">
      <request method="GET" url="http://localhost:8080/tags/doesnotexist?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>404</status>
   </testcase>
   
   <testcase name="GET tags, node exists">
      <request method="GET" url="http://localhost:8080/tags/blackbox1?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>200</status>
      <contents type="python">
         import simplejson
         json = simplejson.loads(contents)
         
         assert json['owner'] == 'blackbox1'
         assert len(json['tags']) == 3
         assert 'tag1' in json['tags']
         assert 'tag2' in json['tags']
         assert 'tag3' in json['tags']
      </contents>
   </testcase>
   
   <!-- Testing DELETE -->
   <testcase name="DELETE tags, node DNE">
      <request method="DELETE" url="http://localhost:8080/tags/doesnotexist?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>404</status>
   </testcase>
   <testcase name="DELETE tags, user has no access">
      <request method="DELETE" url="http://localhost:8080/tags/blackbox1?error_format=verbose_txt">
         <auth username="blackbox2" password="sandbox"/>
      </request>
      <status>403</status>
   </testcase>
   
   <testcase name="DELETE tags, node DNE">
      <request method="DELETE" url="http://localhost:8080/tags/doesnotexist?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>404</status>
   </testcase>
   
   <testcase name="DELETE tags, tags specified STEP ONE">
      <request method="DELETE" url="http://localhost:8080/tags/blackbox1">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="tags">tag3</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>200</status>
   </testcase>
   
   <testcase name="DELETE tags, tags specified STEP TWO">
      <request method="GET" url="http://localhost:8080/tags/blackbox1?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>200</status>
      <contents type="python">
         import simplejson
         json = simplejson.loads(contents)
         
         assert len(json['tags']) == 2
         assert 'tag1' in json['tags']
         assert 'tag2' in json['tags']
      </contents>
   </testcase>
   
   <testcase name="DELETE tags, no tags specified STEP ONE">
      <request method="DELETE" url="http://localhost:8080/tags/blackbox1?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>200</status>
   </testcase>
   
   <testcase name="DELETE tags, no tags specified STEP TWO">
      <request method="GET" url="http://localhost:8080/tags/blackbox1?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>200</status>
         <contents type="python">
         import simplejson
         json = simplejson.loads(contents)
         
         assert len(json['tags']) == 0
      </contents>
   </testcase>
</test>
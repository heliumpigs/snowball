<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright 2009 Yusuf Simonson
  This file is part of Snowball.
  
  Snowball is free software: you can redistribute it and/or modify it under the
  terms of the GNU Affero General Public License as published by the Free
  Software Foundation, either version 3 of the License, or (at your option) any
  later version.

  Snowball is distributed in the hope that it will be useful, but WITHOUT ANY
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
  A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
  details.

  You should have received a copy of the GNU Affero General Public License
  along with Snowball.  If not, see <http://www.gnu.org/licenses/>.
-->

<test>
   <!-- First insert sample nodes -->
   <testcase name="PUT a sample node">
      <request method="PUT" url="http://localhost:8080/nodes/a?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>200</status>
   </testcase>
   
   <testcase name="PUT a sample node">
      <request method="PUT" url="http://localhost:8080/nodes/b?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>200</status>
   </testcase>
   
   <testcase name="PUT a sample node">
      <request method="PUT" url="http://localhost:8080/nodes/x?error_format=verbose_txt">
         <auth username="blackbox2" password="sandbox"/>
      </request>
      <status>200</status>
   </testcase>
   
   <!-- Illegal PUT attempts -->
   <testcase name="PUT link with improper credentials">
      <request method="PUT" url="http://localhost:8080/links/x/a">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="weight">1.0</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>403</status>
   </testcase>
   
   <testcase name="PUT link without a weight">
      <request method="PUT" url="http://localhost:8080/links/a/b?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>400</status>
   </testcase>
   
   <testcase name="PUT link with a non-float weight">
      <request method="PUT" url="http://localhost:8080/links/a/b">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="weight">a</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>400</status>
   </testcase>
   
   <testcase name="PUT link with too negative of a weight">
      <request method="PUT" url="http://localhost:8080/links/a/b">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="weight">-1.0001</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>400</status>
   </testcase>
   
   <testcase name="PUT link with too postiive of a weight">
      <request method="PUT" url="http://localhost:8080/links/a/b">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="weight">1.0001</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>400</status>
   </testcase>
   
   <testcase name="PUT link with non-existent from node">
      <request method="PUT" url="http://localhost:8080/links/doesntexist/b">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="weight">1.0</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>404</status>
   </testcase>
   
   <testcase name="PUT link with non-existent to node">
      <request method="PUT" url="http://localhost:8080/links/a/doesntexist">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="weight">1.0</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>404</status>
   </testcase>
   
   <!-- Legal PUTs -->
   <testcase name="PUT link without tags">
      <request method="PUT" url="http://localhost:8080/links/a/x">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="weight">0.0</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>200</status>
      <contents type="python">
         import simplejson
         json = simplejson.loads(contents)
         
         assert json['weight'] == 0.0
         assert json['update_date']
         assert len(json['tags']) == 0
      </contents>
   </testcase>
   
   <testcase name="update link with new weight">
      <request method="PUT" url="http://localhost:8080/links/a/x">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="weight">0.5</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>200</status>
      <contents type="python">
         import simplejson
         json = simplejson.loads(contents)
         
         assert json['weight'] == 0.5
         assert json['update_date']
         assert len(json['tags']) == 0
      </contents>
   </testcase>
   
   <testcase name="update link with tags">
      <request method="PUT" url="http://localhost:8080/links/a/x">
         <auth username="blackbox1" password="sandbox"/>
         <body type="post">
            <param name="tags">tag1 tag2</param>
            <param name="error_format">verbose_txt</param>
         </body>
      </request>
      <status>200</status>
      <contents type="python">
         import simplejson
         json = simplejson.loads(contents)
         
         assert json['weight'] == 0.5
         assert json['update_date']
         assert len(json['tags']) == 2
         assert 'tag1' in json['tags']
         assert 'tag2' in json['tags']
      </contents>
   </testcase>
   
   <!-- GET links -->
   <testcase name="GET link with non-existent from node">
      <request method="GET" url="http://localhost:8080/links/doesntexist/x?error_format=verbose_txt"/>
      <status>404</status>
   </testcase>
   
   <testcase name="GET link with non-existent to node">
      <request method="GET" url="http://localhost:8080/links/a/doesntexist?error_format=verbose_txt"/>
      <status>404</status>
   </testcase>
   
   <testcase name="GET link that doesn't exist">
      <request method="GET" url="http://localhost:8080/links/b/x?error_format=verbose_txt"/>
      <status>404</status>
   </testcase>
   
   <testcase name="GET link">
      <request method="GET" url="http://localhost:8080/links/a/x?error_format=verbose_txt"/>
      <status>200</status>
   </testcase>
   
   <!-- DELETE links -->
   <testcase name="unauthorized DELETE">
      <request method="DELETE" url="http://localhost:8080/links/x/a?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>403</status>
   </testcase>
   
   <testcase name="DELETE non-existent from node">
      <request method="DELETE" url="http://localhost:8080/links/nonexistent/a?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>404</status>
   </testcase>
   
   <testcase name="DELETE non-existent to node">
      <request method="DELETE" url="http://localhost:8080/links/a/nonexistent?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>404</status>
   </testcase>
   
   <testcase name="legal link DELETE">
      <request method="DELETE" url="http://localhost:8080/links/a/x?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>200</status>
   </testcase>
   
   <!-- Cleanup -->
   <testcase name="Cleanup #1">
      <request method="DELETE" url="http://localhost:8080/nodes/a?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>200</status>
   </testcase>
   
   <testcase name="Cleanup #2">
      <request method="DELETE" url="http://localhost:8080/nodes/b?error_format=verbose_txt">
         <auth username="blackbox1" password="sandbox"/>
      </request>
      <status>200</status>
   </testcase>
   
   <testcase name="Cleanup #3">
      <request method="DELETE" url="http://localhost:8080/nodes/x?error_format=verbose_txt">
         <auth username="blackbox2" password="sandbox"/>
      </request>
      <status>200</status>
   </testcase>
</test>